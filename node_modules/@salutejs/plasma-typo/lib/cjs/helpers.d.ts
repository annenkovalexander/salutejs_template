import { CSSObject, InterpolationFunction } from 'styled-components';
import { TypoProps } from './types';
export declare const prepareStandardBreakpointTypo: (typo: CSSObject) => CSSObject;
declare type CompatProps = 'font-family' | 'font-size' | 'font-style' | 'font-weight' | 'letter-spacing' | 'line-height';
declare type TypoMap = Record<string, {
    name: string;
} & Partial<Record<CompatProps, string>>>;
export declare const prepareCompatibleTypo: (typoMap: TypoMap) => CSSObject;
export declare const mergeTypoProps: (...obj: TypoProps[]) => TypoProps;
declare type FontFamily = 'SB Sans Display' | 'SB Serif Display' | 'SB Sans Cond Mono' | 'SB Sans Text' | 'SB Sans Text Mono';
interface CreateVariablesByArcheTypeProps {
    displayFontFamily: FontFamily;
    textFontFamily: FontFamily;
    typoS?: TypoProps;
    typoM?: TypoProps;
    typoL?: TypoProps;
}
export declare const createVariablesByArcheType: ({ displayFontFamily, textFontFamily, typoS, typoM, typoL, }: CreateVariablesByArcheTypeProps) => InterpolationFunction<{
    deviceScale?: number;
    breakWord?: boolean;
}>;
export {};
