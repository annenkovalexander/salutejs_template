"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconRoot = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var sizeMap = {
  xs: 1,
  // 16px
  s: 1.5 // 24px
  // m: 2.25, // 36px
  // l: 3, // 48px
  // xl: 3.5, // 56px
  // xxl: 4, // 64px

};

var StyledRoot = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-1x30mn6-0"
})(["display:inline-flex;", ""], function (_ref) {
  var w = _ref.w;
  return (0, _styledComponents.css)(["width:", ";height:", ";flex:0 0 ", ";"], w, w, w);
});

var IconRoot = function IconRoot(_ref2) {
  var IconComponent = _ref2.icon,
      size = _ref2.size,
      color = _ref2.color,
      className = _ref2.className;
  var c = color || _plasmaCore.primary;
  var w = "".concat(sizeMap[size], "rem");
  return /*#__PURE__*/_react["default"].createElement(StyledRoot, {
    "aria-hidden": true,
    w: w,
    className: className
  }, /*#__PURE__*/_react["default"].createElement(IconComponent, {
    color: c,
    size: size
  }));
};

exports.IconRoot = IconRoot;