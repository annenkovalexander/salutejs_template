"use strict";
// Generated by robots, do not change this manually!
Object.defineProperty(exports, "__esModule", { value: true });
exports.buttonCritical = exports.buttonWarning = exports.buttonSuccess = exports.buttonAccent = exports.buttonSecondary = exports.surfaceCard = exports.surfaceSolid03 = exports.surfaceSolid02 = exports.surfaceSolid01 = exports.surfaceLiquid03 = exports.surfaceLiquid02 = exports.surfaceLiquid01 = exports.overlay = exports.critical = exports.warning = exports.success = exports.accent = exports.background = exports.paragraph = exports.tertiary = exports.secondary = exports.primary = exports.text = exports.buttonWhiteSecondary = exports.buttonWhite = exports.buttonBlackSecondary = exports.buttonBlack = exports.blackTertiary = exports.blackSecondary = exports.blackPrimary = exports.whiteTertiary = exports.whiteSecondary = exports.whitePrimary = exports.skeletonGradientLighter = exports.skeletonGradient = exports.overlayHard = exports.overlaySoft = exports.lightBackgroundPrimary = exports.darkBackgroundPrimary = exports.backgroundPrimary = exports.onLightSurfaceNegative = exports.onLightSurfaceWarning = exports.onLightSurfacePositive = exports.onLightSurfaceAccentGradient = exports.onLightSurfaceAccent = exports.onLightSurfaceTransparentCard = exports.onLightSurfaceTransparentTertiary = exports.onLightSurfaceTransparentSecondary = exports.onLightSurfaceTransparentPrimary = exports.onLightSurfaceSolidCard = exports.onLightSurfaceSolidTertiary = exports.onLightSurfaceSolidSecondary = exports.onLightSurfaceSolidPrimary = exports.onLightSurfaceSolidDefault = exports.onDarkSurfaceNegative = exports.onDarkSurfaceWarning = exports.onDarkSurfacePositive = exports.onDarkSurfaceAccentGradient = exports.onDarkSurfaceAccent = exports.onDarkSurfaceTransparentCard = exports.onDarkSurfaceTransparentTertiary = exports.onDarkSurfaceTransparentSecondary = exports.onDarkSurfaceTransparentPrimary = exports.onDarkSurfaceSolidCard = exports.onDarkSurfaceSolidTertiary = exports.onDarkSurfaceSolidSecondary = exports.onDarkSurfaceSolidPrimary = exports.onDarkSurfaceSolidDefault = exports.surfaceClear = exports.surfaceNegative = exports.surfaceWarning = exports.surfacePositive = exports.surfaceAccentGradient = exports.surfaceAccent = exports.surfaceTransparentCard = exports.surfaceTransparentTertiary = exports.surfaceTransparentSecondary = exports.surfaceTransparentPrimary = exports.surfaceSolidCard = exports.surfaceSolidTertiary = exports.surfaceSolidSecondary = exports.surfaceSolidPrimary = exports.surfaceSolidDefault = exports.onLightTextNegative = exports.onLightTextWarning = exports.onLightTextPositive = exports.onLightTextAccentGradient = exports.onLightTextAccent = exports.onLightTextParagraph = exports.onLightTextTertiary = exports.onLightTextSecondary = exports.onLightTextPrimary = exports.onDarkTextNegative = exports.onDarkTextWarning = exports.onDarkTextPositive = exports.onDarkTextAccentGradient = exports.onDarkTextAccent = exports.onDarkTextParagraph = exports.onDarkTextTertiary = exports.onDarkTextSecondary = exports.onDarkTextPrimary = exports.textNegative = exports.textWarning = exports.textPositive = exports.textAccentGradient = exports.textAccent = exports.textParagraph = exports.textTertiary = exports.textSecondary = exports.textPrimary = void 0;
/** Основной цвет текста */
exports.textPrimary = 'var(--text-primary, rgba(255, 255, 255, 0.96))';
/** Вторичный цвет текста */
exports.textSecondary = 'var(--text-secondary, rgba(255, 255, 255, 0.56))';
/** Третичный цвет текста */
exports.textTertiary = 'var(--text-tertiary, rgba(255, 255, 255, 0.28))';
/** Сплошной наборный текст */
exports.textParagraph = 'var(--text-paragraph, rgba(255, 255, 255, 0.8))';
/** Акцентный цвет */
exports.textAccent = 'var(--text-accent, #15D015)';
/** Акцентный цвет с градиентом */
exports.textAccentGradient = 'var(--text-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет успеха */
exports.textPositive = 'var(--text-positive, #1A9E32)';
/** Цвет предупреждения */
exports.textWarning = 'var(--text-warning, #F55D05)';
/** Цвет ошибки */
exports.textNegative = 'var(--text-negative, #FF293E)';
/** Основной цвет текста на темном фоне */
exports.onDarkTextPrimary = 'var(--on-dark-text-primary, rgba(255, 255, 255, 0.96))';
/** Вторичный цвет текста на темном фоне */
exports.onDarkTextSecondary = 'var(--on-dark-text-secondary, rgba(255, 255, 255, 0.56))';
/** Третичный цвет текста на темном фоне */
exports.onDarkTextTertiary = 'var(--on-dark-text-tertiary, rgba(255, 255, 255, 0.28))';
/** Сплошной наборный текст на темном фоне */
exports.onDarkTextParagraph = 'var(--on-dark-text-paragraph, rgba(255, 255, 255, 0.8))';
/** Акцентный цвет на темном фоне */
exports.onDarkTextAccent = 'var(--on-dark-text-accent, #15D015)';
/** Акцентный цвет с градиентом на темном фоне */
exports.onDarkTextAccentGradient = 'var(--on-dark-text-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет успеха на темном фоне */
exports.onDarkTextPositive = 'var(--on-dark-text-positive, #1A9E32)';
/** Цвет предупреждения на темном фоне */
exports.onDarkTextWarning = 'var(--on-dark-text-warning, #F55D05)';
/** Цвет ошибки на темном фоне */
exports.onDarkTextNegative = 'var(--on-dark-text-negative, #FF293E)';
/** Основной цвет текста на светлом фоне */
exports.onLightTextPrimary = 'var(--on-light-text-primary, rgba(36, 40, 43, 0.96))';
/** Вторичный цвет текста на светлом фоне */
exports.onLightTextSecondary = 'var(--on-light-text-secondary, rgba(36, 40, 43, 0.56))';
/** Третичный цвет текста на светлом фоне */
exports.onLightTextTertiary = 'var(--on-light-text-tertiary, rgba(36, 40, 43, 0.28))';
/** Сплошной наборный текст на светлом фоне */
exports.onLightTextParagraph = 'var(--on-light-text-paragraph, rgba(36, 40, 43, 0.8))';
/** Акцентный цвет на светлом фоне */
exports.onLightTextAccent = 'var(--on-light-text-accent, #15B015)';
/** Акцентный цвет с градиентом на светлом фоне */
exports.onLightTextAccentGradient = 'var(--on-light-text-accent-gradient, radial-gradient(50% 200% at 0% 100%, rgba(250, 237, 5, 0.6) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(33, 202, 154, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(12, 156, 12, 0) 100%), #0C9C0C)';
/** Цвет успеха на светлом фоне */
exports.onLightTextPositive = 'var(--on-light-text-positive, #1A9E32)';
/** Цвет предупреждения на светлом фоне */
exports.onLightTextWarning = 'var(--on-light-text-warning, #F55D05)';
/** Цвет ошибки на светлом фоне */
exports.onLightTextNegative = 'var(--on-light-text-negative, #FF293E)';
/** Непрозрачный фон поверхности/контрола по умолчанию */
exports.surfaceSolidDefault = 'var(--surface-solid-default, #F2F5F7)';
/** Основной непрозрачный фон поверхности/контрола */
exports.surfaceSolidPrimary = 'var(--surface-solid-primary, #15181A)';
/** Вторичный непрозрачный фон поверхности/контрола */
exports.surfaceSolidSecondary = 'var(--surface-solid-secondary, #24282B)';
/** Третичный непрозрачный фон поверхности/контрола */
exports.surfaceSolidTertiary = 'var(--surface-solid-tertiary, #31373B)';
/** Основной фон для карточек */
exports.surfaceSolidCard = 'var(--surface-solid-card, #15181A)';
/** Основной прозрачный фон поверхности/контрола */
exports.surfaceTransparentPrimary = 'var(--surface-transparent-primary, rgba(242, 245, 247, 0.06))';
/** Вторичный прозрачный фон поверхности/контрола */
exports.surfaceTransparentSecondary = 'var(--surface-transparent-secondary, rgba(242, 245, 247, 0.12))';
/** Третичный прозрачный фон поверхности/контрола */
exports.surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, rgba(242, 245, 247, 0.2))';
/** Прозрачный фон для карточек */
exports.surfaceTransparentCard = 'var(--surface-transparent-card, rgba(242, 245, 247, 0.06))';
/** Акцентный фон поверхности/контрола */
exports.surfaceAccent = 'var(--surface-accent, #15B015)';
/** Акцентный фон поверхности/контрола с градиентом */
exports.surfaceAccentGradient = 'var(--surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет фона поверхности/контрола успех */
exports.surfacePositive = 'var(--surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение */
exports.surfaceWarning = 'var(--surface-warning, #F55D05)';
/** Цвет фона поверхности/контрола ошибка */
exports.surfaceNegative = 'var(--surface-negative, #FF293E)';
/** Фон поверхности/контрола без заливки */
exports.surfaceClear = 'var(--surface-clear, rgba(0, 0, 0, 0))';
/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
exports.onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, #FFFFFF)';
/** Основной непрозрачный фон поверхности/контрола на темном фоне */
exports.onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #15181A)';
/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
exports.onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #24282B)';
/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
exports.onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #31373B)';
/** Основной фон для карточек на темном фоне */
exports.onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #15181A)';
/** Основной прозрачный фон поверхности/контрола на темном фоне */
exports.onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, rgba(255, 255, 255, 0.06))';
/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
exports.onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary, rgba(255, 255, 255, 0.12))';
/** Третичный прозрачный фон поверхности/контрола на темном фоне */
exports.onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';
/** Прозрачный фон для карточек на темном фоне */
exports.onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, rgba(255, 255, 255, 0.06))';
/** Акцентный фон поверхности/контрола на темном фоне */
exports.onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #15B015)';
/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
exports.onDarkSurfaceAccentGradient = 'var(--on-dark-surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет фона поверхности/контрола успех на темном фоне */
exports.onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение на темном фоне */
exports.onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #F55D05)';
/** Цвет фона поверхности/контрола ошибка на темном фоне */
exports.onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';
/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
exports.onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #08090A)';
/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
exports.onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F2F5F7)';
/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
exports.onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #E4EBF0)';
/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
exports.onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #D1DDE5)';
/** Основной фон для карточек на светлом фоне */
exports.onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, #F2F5F7)';
/** Основной прозрачный фон поверхности/контрола на светлом фоне */
exports.onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, rgba(8, 9, 10, 0.03))';
/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
exports.onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, rgba(8, 9, 10, 0.06))';
/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
exports.onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, rgba(8, 9, 10, 0.12))';
/** Прозрачный фон для карточек на светлом фоне */
exports.onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, rgba(8, 9, 10, 0.03))';
/** Акцентный фон поверхности/контрола на светлом фоне */
exports.onLightSurfaceAccent = 'var(--on-light-surface-accent, #15B015)';
/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
exports.onLightSurfaceAccentGradient = 'var(--on-light-surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет фона поверхности/контрола успех на светлом фоне */
exports.onLightSurfacePositive = 'var(--on-light-surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
exports.onLightSurfaceWarning = 'var(--on-light-surface-warning, #F55D05)';
/** Цвет фона поверхности/контрола ошибка на светлом фоне */
exports.onLightSurfaceNegative = 'var(--on-light-surface-negative, #FF293E)';
/** Основной фон */
exports.backgroundPrimary = 'var(--background-primary, #08090A)';
/** Основной фон на темном фоне */
exports.darkBackgroundPrimary = 'var(--dark-background-primary, #08090A)';
/** Основной фон на светлом фоне */
exports.lightBackgroundPrimary = 'var(--light-background-primary, #FFFFFF)';
/** Цвет фона паранжи светлый */
exports.overlaySoft = 'var(--overlay-soft, rgba(8, 9, 10, 0.56))';
/** Цвет фона паранжи темный */
exports.overlayHard = 'var(--overlay-hard, rgba(8, 9, 10, 0.96))';
exports.skeletonGradient = 'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';
exports.skeletonGradientLighter = 'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';
/** @deprecated instead use onDarkTextPrimary */
exports.whitePrimary = 'var(--plasma-colors-white-primary, rgba(255, 255, 255, 0.96))';
/** @deprecated instead use onDarkTextSecondary */
exports.whiteSecondary = 'var(--plasma-colors-white-secondary, rgba(255, 255, 255, 0.56))';
/** @deprecated instead use onDarkTextTertiary */
exports.whiteTertiary = 'var(--plasma-colors-white-tertiary, rgba(255, 255, 255, 0.28))';
/** @deprecated instead use onLightTextPrimary */
exports.blackPrimary = 'var(--plasma-colors-black-primary, rgba(36, 40, 43, 0.96))';
/** @deprecated instead use onLightTextSecondary */
exports.blackSecondary = 'var(--plasma-colors-black-secondary, rgba(36, 40, 43, 0.56))';
/** @deprecated instead use onLightTextTertiary */
exports.blackTertiary = 'var(--plasma-colors-black-tertiary, rgba(36, 40, 43, 0.28))';
/** @deprecated instead use onLightSurfaceSolidDefault */
exports.buttonBlack = 'var(--plasma-colors-button-black, #08090A)';
/** @deprecated instead use onLightSurfaceTransparentSecondary */
exports.buttonBlackSecondary = 'var(--plasma-colors-button-black-secondary, rgba(8, 9, 10, 0.06))';
/** @deprecated instead use onDarkSurfaceSolidDefault */
exports.buttonWhite = 'var(--plasma-colors-button-white, #FFFFFF)';
/** @deprecated instead use onDarkSurfaceTransparentSecondary */
exports.buttonWhiteSecondary = 'var(--plasma-colors-button-white-secondary, rgba(255, 255, 255, 0.12))';
/** @deprecated instead use textPrimary */
exports.text = 'var(--plasma-colors-text, rgba(255, 255, 255, 0.96))';
/** @deprecated instead use textPrimary */
exports.primary = 'var(--plasma-colors-primary, rgba(255, 255, 255, 0.96))';
/** @deprecated instead use textSecondary */
exports.secondary = 'var(--plasma-colors-secondary, rgba(255, 255, 255, 0.56))';
/** @deprecated instead use textTertiary */
exports.tertiary = 'var(--plasma-colors-tertiary, rgba(255, 255, 255, 0.28))';
/** @deprecated instead use textParagraph */
exports.paragraph = 'var(--plasma-colors-paragraph, rgba(255, 255, 255, 0.8))';
/** @deprecated instead use backgroundPrimary */
exports.background = 'var(--plasma-colors-background, #08090A)';
/** @deprecated instead use textAccent */
exports.accent = 'var(--plasma-colors-accent, #15D015)';
/** @deprecated instead use textPositive */
exports.success = 'var(--plasma-colors-success, #1A9E32)';
/** @deprecated instead use textWarning */
exports.warning = 'var(--plasma-colors-warning, #F55D05)';
/** @deprecated instead use textNegative */
exports.critical = 'var(--plasma-colors-critical, #FF293E)';
/** @deprecated instead use overlaySoft */
exports.overlay = 'var(--plasma-colors-overlay, rgba(8, 9, 10, 0.56))';
/** @deprecated instead use surfaceTransparentPrimary */
exports.surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, rgba(242, 245, 247, 0.06))';
/** @deprecated instead use surfaceTransparentSecondary */
exports.surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, rgba(242, 245, 247, 0.12))';
/** @deprecated instead use surfaceTransparentTertiary */
exports.surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, rgba(242, 245, 247, 0.2))';
/** @deprecated instead use surfaceSolidPrimary */
exports.surfaceSolid01 = 'var(--plasma-colors-surface-solid01, #15181A)';
/** @deprecated instead use surfaceSolidSecondary */
exports.surfaceSolid02 = 'var(--plasma-colors-surface-solid02, #24282B)';
/** @deprecated instead use surfaceSolidTertiary */
exports.surfaceSolid03 = 'var(--plasma-colors-surface-solid03, #31373B)';
/** @deprecated instead use surfaceTransparentCard */
exports.surfaceCard = 'var(--plasma-colors-surface-card, rgba(242, 245, 247, 0.06))';
/** @deprecated instead use surfaceTransparentSecondary */
exports.buttonSecondary = 'var(--plasma-colors-button-secondary, rgba(242, 245, 247, 0.12))';
/** @deprecated instead use textAccent */
exports.buttonAccent = 'var(--plasma-colors-button-accent, #15D015)';
/** @deprecated instead use surfacePositive */
exports.buttonSuccess = 'var(--plasma-colors-button-success, #1A9E32)';
/** @deprecated instead use surfaceWarning */
exports.buttonWarning = 'var(--plasma-colors-button-warning, #F55D05)';
/** @deprecated instead use surfaceNegative */
exports.buttonCritical = 'var(--plasma-colors-button-critical, #FF293E)';
//# sourceMappingURL=index.js.map