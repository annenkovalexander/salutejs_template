// Generated by robots, do not change this manually!
/** Основной цвет текста */
export var textPrimary = 'var(--text-primary, rgba(255, 255, 255, 0.96))';
/** Вторичный цвет текста */
export var textSecondary = 'var(--text-secondary, rgba(255, 255, 255, 0.56))';
/** Третичный цвет текста */
export var textTertiary = 'var(--text-tertiary, rgba(255, 255, 255, 0.28))';
/** Сплошной наборный текст */
export var textParagraph = 'var(--text-paragraph, rgba(255, 255, 255, 0.8))';
/** Акцентный цвет */
export var textAccent = 'var(--text-accent, #15D015)';
/** Акцентный цвет с градиентом */
export var textAccentGradient = 'var(--text-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет успеха */
export var textPositive = 'var(--text-positive, #1A9E32)';
/** Цвет предупреждения */
export var textWarning = 'var(--text-warning, #F55D05)';
/** Цвет ошибки */
export var textNegative = 'var(--text-negative, #FF293E)';
/** Основной цвет текста на темном фоне */
export var onDarkTextPrimary = 'var(--on-dark-text-primary, rgba(255, 255, 255, 0.96))';
/** Вторичный цвет текста на темном фоне */
export var onDarkTextSecondary = 'var(--on-dark-text-secondary, rgba(255, 255, 255, 0.56))';
/** Третичный цвет текста на темном фоне */
export var onDarkTextTertiary = 'var(--on-dark-text-tertiary, rgba(255, 255, 255, 0.28))';
/** Сплошной наборный текст на темном фоне */
export var onDarkTextParagraph = 'var(--on-dark-text-paragraph, rgba(255, 255, 255, 0.8))';
/** Акцентный цвет на темном фоне */
export var onDarkTextAccent = 'var(--on-dark-text-accent, #15D015)';
/** Акцентный цвет с градиентом на темном фоне */
export var onDarkTextAccentGradient = 'var(--on-dark-text-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет успеха на темном фоне */
export var onDarkTextPositive = 'var(--on-dark-text-positive, #1A9E32)';
/** Цвет предупреждения на темном фоне */
export var onDarkTextWarning = 'var(--on-dark-text-warning, #F55D05)';
/** Цвет ошибки на темном фоне */
export var onDarkTextNegative = 'var(--on-dark-text-negative, #FF293E)';
/** Основной цвет текста на светлом фоне */
export var onLightTextPrimary = 'var(--on-light-text-primary, rgba(36, 40, 43, 0.96))';
/** Вторичный цвет текста на светлом фоне */
export var onLightTextSecondary = 'var(--on-light-text-secondary, rgba(36, 40, 43, 0.56))';
/** Третичный цвет текста на светлом фоне */
export var onLightTextTertiary = 'var(--on-light-text-tertiary, rgba(36, 40, 43, 0.28))';
/** Сплошной наборный текст на светлом фоне */
export var onLightTextParagraph = 'var(--on-light-text-paragraph, rgba(36, 40, 43, 0.8))';
/** Акцентный цвет на светлом фоне */
export var onLightTextAccent = 'var(--on-light-text-accent, #15B015)';
/** Акцентный цвет с градиентом на светлом фоне */
export var onLightTextAccentGradient = 'var(--on-light-text-accent-gradient, radial-gradient(50% 200% at 0% 100%, rgba(250, 237, 5, 0.6) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(33, 202, 154, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(12, 156, 12, 0) 100%), #0C9C0C)';
/** Цвет успеха на светлом фоне */
export var onLightTextPositive = 'var(--on-light-text-positive, #1A9E32)';
/** Цвет предупреждения на светлом фоне */
export var onLightTextWarning = 'var(--on-light-text-warning, #F55D05)';
/** Цвет ошибки на светлом фоне */
export var onLightTextNegative = 'var(--on-light-text-negative, #FF293E)';
/** Непрозрачный фон поверхности/контрола по умолчанию */
export var surfaceSolidDefault = 'var(--surface-solid-default, #F2F5F7)';
/** Основной непрозрачный фон поверхности/контрола */
export var surfaceSolidPrimary = 'var(--surface-solid-primary, #15181A)';
/** Вторичный непрозрачный фон поверхности/контрола */
export var surfaceSolidSecondary = 'var(--surface-solid-secondary, #24282B)';
/** Третичный непрозрачный фон поверхности/контрола */
export var surfaceSolidTertiary = 'var(--surface-solid-tertiary, #31373B)';
/** Основной фон для карточек */
export var surfaceSolidCard = 'var(--surface-solid-card, #15181A)';
/** Основной прозрачный фон поверхности/контрола */
export var surfaceTransparentPrimary = 'var(--surface-transparent-primary, rgba(242, 245, 247, 0.06))';
/** Вторичный прозрачный фон поверхности/контрола */
export var surfaceTransparentSecondary = 'var(--surface-transparent-secondary, rgba(242, 245, 247, 0.12))';
/** Третичный прозрачный фон поверхности/контрола */
export var surfaceTransparentTertiary = 'var(--surface-transparent-tertiary, rgba(242, 245, 247, 0.2))';
/** Прозрачный фон для карточек */
export var surfaceTransparentCard = 'var(--surface-transparent-card, rgba(242, 245, 247, 0.06))';
/** Акцентный фон поверхности/контрола */
export var surfaceAccent = 'var(--surface-accent, #15B015)';
/** Акцентный фон поверхности/контрола с градиентом */
export var surfaceAccentGradient = 'var(--surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет фона поверхности/контрола успех */
export var surfacePositive = 'var(--surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение */
export var surfaceWarning = 'var(--surface-warning, #F55D05)';
/** Цвет фона поверхности/контрола ошибка */
export var surfaceNegative = 'var(--surface-negative, #FF293E)';
/** Фон поверхности/контрола без заливки */
export var surfaceClear = 'var(--surface-clear, rgba(0, 0, 0, 0))';
/** Непрозрачный фон поверхности/контрола по умолчанию на темном фоне */
export var onDarkSurfaceSolidDefault = 'var(--on-dark-surface-solid-default, #FFFFFF)';
/** Основной непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidPrimary = 'var(--on-dark-surface-solid-primary, #15181A)';
/** Вторичный непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidSecondary = 'var(--on-dark-surface-solid-secondary, #24282B)';
/** Третичный непрозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceSolidTertiary = 'var(--on-dark-surface-solid-tertiary, #31373B)';
/** Основной фон для карточек на темном фоне */
export var onDarkSurfaceSolidCard = 'var(--on-dark-surface-solid-card, #15181A)';
/** Основной прозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentPrimary = 'var(--on-dark-surface-transparent-primary, rgba(255, 255, 255, 0.06))';
/** Вторичный прозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentSecondary = 'var(--on-dark-surface-transparent-secondary, rgba(255, 255, 255, 0.12))';
/** Третичный прозрачный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceTransparentTertiary = 'var(--on-dark-surface-transparent-tertiary, rgba(255, 255, 255, 0.2))';
/** Прозрачный фон для карточек на темном фоне */
export var onDarkSurfaceTransparentCard = 'var(--on-dark-surface-transparent-card, rgba(255, 255, 255, 0.06))';
/** Акцентный фон поверхности/контрола на темном фоне */
export var onDarkSurfaceAccent = 'var(--on-dark-surface-accent, #15B015)';
/** Акцентный фон поверхности/контрола с градиентом на темном фоне */
export var onDarkSurfaceAccentGradient = 'var(--on-dark-surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет фона поверхности/контрола успех на темном фоне */
export var onDarkSurfacePositive = 'var(--on-dark-surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение на темном фоне */
export var onDarkSurfaceWarning = 'var(--on-dark-surface-warning, #F55D05)';
/** Цвет фона поверхности/контрола ошибка на темном фоне */
export var onDarkSurfaceNegative = 'var(--on-dark-surface-negative, #FF293E)';
/** Непрозрачный фон поверхности/контрола по умолчанию на светлом фоне */
export var onLightSurfaceSolidDefault = 'var(--on-light-surface-solid-default, #08090A)';
/** Основной непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidPrimary = 'var(--on-light-surface-solid-primary, #F2F5F7)';
/** Вторичный непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidSecondary = 'var(--on-light-surface-solid-secondary, #E4EBF0)';
/** Третичный непрозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceSolidTertiary = 'var(--on-light-surface-solid-tertiary, #D1DDE5)';
/** Основной фон для карточек на светлом фоне */
export var onLightSurfaceSolidCard = 'var(--on-light-surface-solid-card, #F2F5F7)';
/** Основной прозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentPrimary = 'var(--on-light-surface-transparent-primary, rgba(8, 9, 10, 0.03))';
/** Вторичный прозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentSecondary = 'var(--on-light-surface-transparent-secondary, rgba(8, 9, 10, 0.06))';
/** Третичный прозрачный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceTransparentTertiary = 'var(--on-light-surface-transparent-tertiary, rgba(8, 9, 10, 0.12))';
/** Прозрачный фон для карточек на светлом фоне */
export var onLightSurfaceTransparentCard = 'var(--on-light-surface-transparent-card, rgba(8, 9, 10, 0.03))';
/** Акцентный фон поверхности/контрола на светлом фоне */
export var onLightSurfaceAccent = 'var(--on-light-surface-accent, #15B015)';
/** Акцентный фон поверхности/контрола с градиентом на светлом фоне */
export var onLightSurfaceAccentGradient = 'var(--on-light-surface-accent-gradient, radial-gradient(50% 150% at 0% 100%, rgba(250, 237, 5, 0.9) 0%, rgba(21, 208, 21, 0.12) 100%), radial-gradient(100% 200% at 0% 50%, #15D015 0%, rgba(21, 208, 21, 0) 100%), radial-gradient(100% 320% at 100% 0%, #2A72F8 0%, rgba(21, 208, 21, 0) 100%), #15D015)';
/** Цвет фона поверхности/контрола успех на светлом фоне */
export var onLightSurfacePositive = 'var(--on-light-surface-positive, #1A9E32)';
/** Цвет фона поверхности/контрола предупреждение на светлом фоне */
export var onLightSurfaceWarning = 'var(--on-light-surface-warning, #F55D05)';
/** Цвет фона поверхности/контрола ошибка на светлом фоне */
export var onLightSurfaceNegative = 'var(--on-light-surface-negative, #FF293E)';
/** Основной фон */
export var backgroundPrimary = 'var(--background-primary, #08090A)';
/** Основной фон на темном фоне */
export var darkBackgroundPrimary = 'var(--dark-background-primary, #08090A)';
/** Основной фон на светлом фоне */
export var lightBackgroundPrimary = 'var(--light-background-primary, #FFFFFF)';
/** Цвет фона паранжи светлый */
export var overlaySoft = 'var(--overlay-soft, rgba(8, 9, 10, 0.56))';
/** Цвет фона паранжи темный */
export var overlayHard = 'var(--overlay-hard, rgba(8, 9, 10, 0.96))';
export var skeletonGradient = 'var(--skeleton-gradient, linear-gradient( 90deg, rgba(255, 255, 255, 0.09) 0%, rgba(255, 255, 255, 0.08) 6.25%, rgba(255, 255, 255, 0.05) 12.5%, rgba(255, 255, 255, 0.01) 25%, rgba(255, 255, 255, 0.05) 37.5%, rgba(255, 255, 255, 0.08) 43.75%, rgba(255, 255, 255, 0.09) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.05) 62.5%, rgba(255, 255, 255, 0.01) 75%, rgba(255, 255, 255, 0.05) 87.5%, rgba(255, 255, 255, 0.08) 93.75%, rgba(255, 255, 255, 0.09) 100% ))';
export var skeletonGradientLighter = 'var(--skeleton-gradient-lighter, linear-gradient( 90deg, rgba(255, 255, 255, 0.36) 0%, rgba(255, 255, 255, 0.32) 6.25%, rgba(255, 255, 255, 0.20) 12.5%, rgba(255, 255, 255, 0.04) 25%, rgba(255, 255, 255, 0.20) 37.5%, rgba(255, 255, 255, 0.32) 43.75%, rgba(255, 255, 255, 0.36) 50%, rgba(255, 255, 255, 0.08) 56.25%, rgba(255, 255, 255, 0.20) 62.5%, rgba(255, 255, 255, 0.04) 75%, rgba(255, 255, 255, 0.20) 87.5%, rgba(255, 255, 255, 0.32) 93.75%, rgba(255, 255, 255, 0.36) 100% ))';
/** @deprecated instead use onDarkTextPrimary */
export var whitePrimary = 'var(--plasma-colors-white-primary, rgba(255, 255, 255, 0.96))';
/** @deprecated instead use onDarkTextSecondary */
export var whiteSecondary = 'var(--plasma-colors-white-secondary, rgba(255, 255, 255, 0.56))';
/** @deprecated instead use onDarkTextTertiary */
export var whiteTertiary = 'var(--plasma-colors-white-tertiary, rgba(255, 255, 255, 0.28))';
/** @deprecated instead use onLightTextPrimary */
export var blackPrimary = 'var(--plasma-colors-black-primary, rgba(36, 40, 43, 0.96))';
/** @deprecated instead use onLightTextSecondary */
export var blackSecondary = 'var(--plasma-colors-black-secondary, rgba(36, 40, 43, 0.56))';
/** @deprecated instead use onLightTextTertiary */
export var blackTertiary = 'var(--plasma-colors-black-tertiary, rgba(36, 40, 43, 0.28))';
/** @deprecated instead use onLightSurfaceSolidDefault */
export var buttonBlack = 'var(--plasma-colors-button-black, #08090A)';
/** @deprecated instead use onLightSurfaceTransparentSecondary */
export var buttonBlackSecondary = 'var(--plasma-colors-button-black-secondary, rgba(8, 9, 10, 0.06))';
/** @deprecated instead use onDarkSurfaceSolidDefault */
export var buttonWhite = 'var(--plasma-colors-button-white, #FFFFFF)';
/** @deprecated instead use onDarkSurfaceTransparentSecondary */
export var buttonWhiteSecondary = 'var(--plasma-colors-button-white-secondary, rgba(255, 255, 255, 0.12))';
/** @deprecated instead use textPrimary */
export var text = 'var(--plasma-colors-text, rgba(255, 255, 255, 0.96))';
/** @deprecated instead use textPrimary */
export var primary = 'var(--plasma-colors-primary, rgba(255, 255, 255, 0.96))';
/** @deprecated instead use textSecondary */
export var secondary = 'var(--plasma-colors-secondary, rgba(255, 255, 255, 0.56))';
/** @deprecated instead use textTertiary */
export var tertiary = 'var(--plasma-colors-tertiary, rgba(255, 255, 255, 0.28))';
/** @deprecated instead use textParagraph */
export var paragraph = 'var(--plasma-colors-paragraph, rgba(255, 255, 255, 0.8))';
/** @deprecated instead use backgroundPrimary */
export var background = 'var(--plasma-colors-background, #08090A)';
/** @deprecated instead use textAccent */
export var accent = 'var(--plasma-colors-accent, #15D015)';
/** @deprecated instead use textPositive */
export var success = 'var(--plasma-colors-success, #1A9E32)';
/** @deprecated instead use textWarning */
export var warning = 'var(--plasma-colors-warning, #F55D05)';
/** @deprecated instead use textNegative */
export var critical = 'var(--plasma-colors-critical, #FF293E)';
/** @deprecated instead use overlaySoft */
export var overlay = 'var(--plasma-colors-overlay, rgba(8, 9, 10, 0.56))';
/** @deprecated instead use surfaceTransparentPrimary */
export var surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, rgba(242, 245, 247, 0.06))';
/** @deprecated instead use surfaceTransparentSecondary */
export var surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, rgba(242, 245, 247, 0.12))';
/** @deprecated instead use surfaceTransparentTertiary */
export var surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, rgba(242, 245, 247, 0.2))';
/** @deprecated instead use surfaceSolidPrimary */
export var surfaceSolid01 = 'var(--plasma-colors-surface-solid01, #15181A)';
/** @deprecated instead use surfaceSolidSecondary */
export var surfaceSolid02 = 'var(--plasma-colors-surface-solid02, #24282B)';
/** @deprecated instead use surfaceSolidTertiary */
export var surfaceSolid03 = 'var(--plasma-colors-surface-solid03, #31373B)';
/** @deprecated instead use surfaceTransparentCard */
export var surfaceCard = 'var(--plasma-colors-surface-card, rgba(242, 245, 247, 0.06))';
/** @deprecated instead use surfaceTransparentSecondary */
export var buttonSecondary = 'var(--plasma-colors-button-secondary, rgba(242, 245, 247, 0.12))';
/** @deprecated instead use textAccent */
export var buttonAccent = 'var(--plasma-colors-button-accent, #15D015)';
/** @deprecated instead use surfacePositive */
export var buttonSuccess = 'var(--plasma-colors-button-success, #1A9E32)';
/** @deprecated instead use surfaceWarning */
export var buttonWarning = 'var(--plasma-colors-button-warning, #F55D05)';
/** @deprecated instead use surfaceNegative */
export var buttonCritical = 'var(--plasma-colors-button-critical, #FF293E)';
//# sourceMappingURL=index.js.map