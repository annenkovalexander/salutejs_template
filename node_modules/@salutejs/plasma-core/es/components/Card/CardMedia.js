var _excluded = ["disabled", "placeholder", "style", "children", "className"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled, { css } from 'styled-components';
import { Image } from '../Image';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Card/CardMedia');
var StyledImage = /*#__PURE__*/styled(Image).withConfig({
  componentId: "plasma__sc-1807z6b-0"
})(["background-size:cover;", ""], function (_ref) {
  var $disabled = _ref.$disabled;
  return $disabled && css(["opacity:0.5;"]);
});
var StyledRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-1807z6b-1"
})(["position:relative;"]);
/**
 * Компонент для отображения картинок.
 */

export var CardMedia = function CardMedia(_ref2) {
  var disabled = _ref2.disabled,
      placeholder = _ref2.placeholder,
      style = _ref2.style,
      children = _ref2.children,
      className = _ref2.className,
      props = _objectWithoutProperties(_ref2, _excluded);

  var imgStyle = _objectSpread({}, style);

  if (placeholder && !props.src) {
    imgStyle.backgroundImage = "url('".concat(placeholder, "')");
  }

  return /*#__PURE__*/React.createElement(StyledRoot, {
    className: className
  }, /*#__PURE__*/React.createElement(StyledImage, _extends({
    $disabled: disabled,
    style: imgStyle
  }, props)), children);
};