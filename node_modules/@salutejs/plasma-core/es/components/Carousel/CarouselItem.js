var _excluded = ["scrollSnapAlign", "children"],
    _excluded2 = ["left", "top", "children", "style"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { applyScrollSnap } from '../../mixins';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Carousel/CarouselItem');
var StyledItem = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-1hn1o58-0"
})(["", ""], applyScrollSnap);
var StyledItemVirtual = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-1hn1o58-1"
})(["position:absolute;"]);
export var CarouselItem = function CarouselItem(_ref) {
  var _ref$scrollSnapAlign = _ref.scrollSnapAlign,
      scrollSnapAlign = _ref$scrollSnapAlign === void 0 ? 'center' : _ref$scrollSnapAlign,
      children = _ref.children,
      rest = _objectWithoutProperties(_ref, _excluded);

  return /*#__PURE__*/React.createElement(StyledItem, _extends({
    scrollSnapAlign: scrollSnapAlign,
    role: "group",
    "aria-roledescription": "slide"
  }, rest), children);
};
/**
 * Компонент для использовани внутри CarouselVirtual для элементов с фиксированным размером.
 * Адаптирован для использования с хуком useVirtual.
 * ```
 * import { useVirtual } from '@salutejs/use-virtual';
 * ```
 */

export var CarouselItemVirtual = function CarouselItemVirtual(_ref2) {
  var left = _ref2.left,
      top = _ref2.top,
      children = _ref2.children,
      style = _ref2.style,
      rest = _objectWithoutProperties(_ref2, _excluded2);

  return /*#__PURE__*/React.createElement(StyledItemVirtual, _extends({
    role: "group",
    "aria-roledescription": "slide",
    style: _objectSpread({
      transform: "translate(".concat(left !== null && left !== void 0 ? left : 0, "px, ").concat(top !== null && top !== void 0 ? top : 0, "px)")
    }, style)
  }, rest), children);
};