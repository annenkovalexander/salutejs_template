"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabItem = exports.StyledTabItem = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _hooks = /*#__PURE__*/require("../../hooks");

var _mixins = /*#__PURE__*/require("../../mixins");

var _TabsContext = /*#__PURE__*/require("./TabsContext");

var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");

var _excluded = ["children", "contentLeft", "isActive", "role"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

(0, _collectPackageInfo.collectPackageInfo)('Tabs/TabItem');

/**
 * Без этого спана баг - контент (например, иконка)
 * сжимался в угоду текстового контента,
 * при чем ширина иконки игнорируется.
 */
var StyledTabItemContentLeft = /*#__PURE__*/_styledComponents["default"].span.withConfig({
  componentId: "plasma__sc-1am72fb-0"
})(["display:flex;pointer-events:none;"]);
/**
 * Этот спан нужен для сокращения
 * текстового контента и отступов.
 */


var StyledTabItemText = /*#__PURE__*/_styledComponents["default"].span.withConfig({
  componentId: "plasma__sc-1am72fb-1"
})(["display:inline;pointer-events:none;", " ", " ~ &{margin-left:0.375rem;}&:focus,&.focus-visible{outline:0 none;}"], _mixins.applyEllipsis, StyledTabItemContentLeft);

var StyledTabItem = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-1am72fb-2"
})(["align-items:center;box-sizing:border-box;display:flex;justify-content:center;border:0 none;background:none;color:inherit;letter-spacing:inherit;text-align:center;cursor:pointer;&:focus{outline:0 none;}", " ", " ", ""], function (_ref) {
  var disabled = _ref.disabled;
  return disabled && (0, _styledComponents.css)(["pointer-events:none;"]);
}, function (_ref2) {
  var isChildren = _ref2.isChildren;
  return !isChildren && (0, _styledComponents.css)(["width:var(--tab-item-height);padding-left:0;padding-right:0;"]);
}, function (_ref3) {
  var isContentLeft = _ref3.isContentLeft;
  return isContentLeft && (0, _styledComponents.css)(["padding-top:var(--tab-item-padding-y-reduced);padding-bottom:var(--tab-item-padding-y-reduced);"]);
});
/**
 * Элемент списка, недопустимо использовать вне компонента Tabs.
 */
// eslint-disable-next-line prefer-arrow-callback


exports.StyledTabItem = StyledTabItem;
var TabItem = /*#__PURE__*/(0, _react.forwardRef)(function TabItem(_ref4, outerRef) {
  var children = _ref4.children,
      contentLeft = _ref4.contentLeft,
      isActive = _ref4.isActive,
      _ref4$role = _ref4.role,
      role = _ref4$role === void 0 ? 'tab' : _ref4$role,
      rest = _objectWithoutProperties(_ref4, _excluded);

  var innerRef = (0, _react.useRef)(null);
  var ref = (0, _hooks.useForkRef)(outerRef, innerRef);
  var refs = (0, _react.useContext)(_TabsContext.TabsContext);
  (0, _react.useEffect)(function () {
    if (!refs) {
      return;
    }

    refs.register(innerRef);
    return function () {
      return refs.unregister(innerRef);
    };
  }, [refs]);
  return /*#__PURE__*/_react["default"].createElement(StyledTabItem, _extends({
    ref: ref,
    isChildren: !!children,
    isContentLeft: !!contentLeft,
    isActive: isActive,
    "aria-selected": isActive,
    role: role
  }, rest), contentLeft && /*#__PURE__*/_react["default"].createElement(StyledTabItemContentLeft, {
    "aria-hidden": true
  }, contentLeft), children && /*#__PURE__*/_react["default"].createElement(StyledTabItemText, {
    tabIndex: -1
  }, children));
});
exports.TabItem = TabItem;