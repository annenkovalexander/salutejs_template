"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SliderBase = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _hooks = /*#__PURE__*/require("../../hooks");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var Slider = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-drxvay-0"
})(["position:relative;height:1.625rem;user-select:none;", " ", ""], function (_ref) {
  var _ref$$settings = _ref.$settings,
      _ref$$settings$indent = _ref$$settings.indent,
      indent = _ref$$settings$indent === void 0 ? 0.75 : _ref$$settings$indent,
      backgroundColor = _ref$$settings.backgroundColor,
      fillColor = _ref$$settings.fillColor;
  return (0, _styledComponents.css)(["--indent:", "rem;--background-color:", ";--fill-color:", ";"], indent, backgroundColor, fillColor);
}, function (_ref2) {
  var disabled = _ref2.disabled;
  return disabled && (0, _styledComponents.css)(["opacity:0.4;"]);
});

var RailWrap = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-drxvay-1"
})(["height:100%;"]);

var Rail = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-drxvay-2"
})(["position:relative;top:50%;margin-left:var(--indent);margin-right:var(--indent);height:0.25rem;border-radius:0.125rem;background-color:var(--background-color);overflow:hidden;transform:translateY(-50%);"]);

var Fill = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-drxvay-3"
})(["position:absolute;height:100%;top:0;left:0;background-color:var(--fill-color);width:0;"]);

var SliderBase = function SliderBase(_ref3) {
  var max = _ref3.max,
      min = _ref3.min,
      setStepSize = _ref3.setStepSize,
      railFillWidth = _ref3.railFillWidth,
      children = _ref3.children,
      _ref3$railFillXPositi = _ref3.railFillXPosition,
      railFillXPosition = _ref3$railFillXPositi === void 0 ? 0 : _ref3$railFillXPositi,
      disabled = _ref3.disabled,
      onChange = _ref3.onChange,
      _ref3$settings = _ref3.settings,
      settings = _ref3$settings === void 0 ? {} : _ref3$settings;
  var _settings$indent = settings.indent,
      indent = _settings$indent === void 0 ? 0.75 : _settings$indent,
      _settings$fontSizeMul = settings.fontSizeMultiplier,
      fontSizeMultiplier = _settings$fontSizeMul === void 0 ? 16 : _settings$fontSizeMul;
  var ref = (0, _react.useRef)(null);
  var gap = indent * fontSizeMultiplier * 2;
  var onHandleChange = (0, _react.useCallback)(function (e) {
    if (!onChange || disabled) {
      return;
    }

    var _e$currentTarget$getB = e.currentTarget.getBoundingClientRect(),
        x = _e$currentTarget$getB.x,
        width = _e$currentTarget$getB.width;

    var lastX = e.clientX - x;
    var position = min + lastX / (width - gap) * (max - min);
    var result = Math.max(min, Math.min(max, position));
    onChange(result, {
      lastX: lastX
    });
  }, [onChange, disabled, min, gap, max]);
  (0, _hooks.useIsomorphicLayoutEffect)(function () {
    var resizeHandler = function resizeHandler() {
      if (ref.current) {
        var railSize = ref.current.offsetWidth - gap;
        var totalSteps = max - min;
        setStepSize(railSize / totalSteps);
      }
    };

    resizeHandler();
    window.addEventListener('resize', resizeHandler);
    return function () {
      return window.removeEventListener('resize', resizeHandler);
    };
  }, [min, max, setStepSize, ref.current]);
  var fillStyle = {
    left: "".concat(railFillXPosition, "px"),
    width: "".concat(railFillWidth, "px")
  };
  return /*#__PURE__*/_react["default"].createElement(Slider, {
    disabled: disabled,
    ref: ref,
    $settings: settings
  }, /*#__PURE__*/_react["default"].createElement(RailWrap, {
    "aria-hidden": "true",
    onMouseDown: onHandleChange
  }, /*#__PURE__*/_react["default"].createElement(Rail, null, /*#__PURE__*/_react["default"].createElement(Fill, {
    style: fillStyle
  }))), children);
};

exports.SliderBase = SliderBase;