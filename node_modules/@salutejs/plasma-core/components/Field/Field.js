"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldRoot = exports.FieldHelper = exports.FieldContent = exports.FieldPlaceholder = void 0;

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _mixins = /*#__PURE__*/require("../../mixins");

var _tokens = /*#__PURE__*/require("../../tokens");

var _Field = /*#__PURE__*/require("./Field.statuses");

var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

(0, _collectPackageInfo.collectPackageInfo)('Field/Field');

/**
 * Common dynamic placeholder.
 */
var FieldPlaceholder = /*#__PURE__*/_styledComponents["default"].label.withConfig({
  componentId: "plasma__sc-2ygkie-0"
})(["position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;color:", ";pointer-events:none;transition:", ";transform-origin:top left;", ""], _tokens.tertiary, function (_ref) {
  var theme = _ref.theme;
  return theme.lowPerformance ? 'unset' : 'all 0.1s ease-in';
}, _mixins.applyEllipsis);
/**
 * Content wrapper for left and right slots of the field.
 */


exports.FieldPlaceholder = FieldPlaceholder;

var FieldContent = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-2ygkie-1"
})(["position:absolute;top:0;", ";bottom:0;display:flex;align-items:center;height:3rem;"], function (_ref2) {
  var pos = _ref2.pos;
  return pos === 'left' ? 'left: 1rem' : 'right: 1rem';
});
/**
 * An inline block to place a helper text under the form item.
 */


exports.FieldContent = FieldContent;

var FieldHelper = /*#__PURE__*/_styledComponents["default"].span.withConfig({
  componentId: "plasma__sc-2ygkie-2"
})(["", ";display:block;margin-top:0.25rem;", ""], _tokens.caption, _mixins.applyEllipsis);

exports.FieldHelper = FieldHelper;

/**
 * Common container for singular form item.
 */
var FieldRoot = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-2ygkie-3"
})(["", ";position:relative;display:block;box-sizing:border-box;color:", ";", " ", " ", " ", ""], _tokens.body1, _tokens.secondary, _mixins.applyDisabled, function (_ref3) {
  var _ref3$$size = _ref3.$size,
      $size = _ref3$$size === void 0 ? 'm' : _ref3$$size;
  return $size === 'l' ? (0, _styledComponents.css)(["", "{top:1.125rem;left:1rem;right:1rem;}input:not(:placeholder-shown) ~ ", "{transform:scale(0.75);top:0.375rem;}", "{height:3.5rem;}"], FieldPlaceholder, FieldPlaceholder, FieldContent) : (0, _styledComponents.css)(["", "{height:3rem;}"], FieldContent);
}, function (_ref4) {
  var $isContentLeft = _ref4.$isContentLeft,
      $isContentRight = _ref4.$isContentRight;
  return (0, _styledComponents.css)(["input,textarea{", "  ", "}", "{", "  ", "}"], $isContentLeft && 'padding-left: 3.125rem;', $isContentRight && 'padding-right: 3.125rem;', FieldPlaceholder, $isContentLeft && 'left: 3.125rem;', $isContentRight && 'right: 3.125rem;');
}, function (_ref5) {
  var $isHelper = _ref5.$isHelper,
      status = _ref5.status;
  return status && ($isHelper ? (0, _styledComponents.css)(["", "{color:", ";}"], FieldHelper, _Field.fieldStatuses[status]) : (0, _styledComponents.css)(["", "{color:", ";}"], FieldPlaceholder, _Field.fieldStatuses[status]));
});

exports.FieldRoot = FieldRoot;