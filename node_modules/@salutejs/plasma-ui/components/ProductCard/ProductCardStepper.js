"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProductCardStepper = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

var _plasmaIcons = /*#__PURE__*/require("@salutejs/plasma-icons");

var _Button = /*#__PURE__*/require("../Button");

var _Stepper = /*#__PURE__*/require("../Stepper");

var _excluded = ["value", "step", "min", "max", "disabled", "readonly", "onChange"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var StyledStepperRoot = /*#__PURE__*/(0, _styledComponents["default"])(_Stepper.StepperRoot).withConfig({
  componentId: "plasma-ui__sc-2nam6q-0"
})(["width:100%;"]);
var StyledStepperValue = /*#__PURE__*/(0, _styledComponents["default"])(_Stepper.StepperValue).withConfig({
  componentId: "plasma-ui__sc-2nam6q-1"
})(["", " ", ""], function (_ref) {
  var showWarning = _ref.showWarning;
  return !showWarning && (0, _styledComponents.css)(["color:", ";"], _plasmaCore.black);
}, function (_ref2) {
  var $isHidden = _ref2.$isHidden;
  return $isHidden && (0, _styledComponents.css)(["display:none;"]);
});
var StyledInfoButton = /*#__PURE__*/(0, _styledComponents["default"])(_Button.Button).attrs(function () {
  return {
    size: 's',
    square: true
  };
}).withConfig({
  componentId: "plasma-ui__sc-2nam6q-2"
})(["color:", ";background-color:rgba(8,8,8,0.12);margin-left:auto;pointer-events:none;", ""], _plasmaCore.black, function (_ref3) {
  var showWarning = _ref3.showWarning;
  return showWarning && (0, _styledComponents.css)(["background-color:rgba(10,10,10,0.05);color:", ";"], _plasmaCore.warning);
});

var StyledStepperButton = /*#__PURE__*/_react["default"].memo( /*#__PURE__*/(0, _styledComponents["default"])(_Button.Button).attrs(function () {
  return {
    size: 's',
    square: true
  };
}).withConfig({
  componentId: "plasma-ui__sc-2nam6q-3"
})(["color:", ";background-color:rgba(8,8,8,0.12);align-self:flex-end;transition:", ";", ""], _plasmaCore.black, function (_ref4) {
  var theme = _ref4.theme;
  return theme.lowPerformance ? 'unset' : 'opacity 0.15s ease-in-out';
}, function (_ref5) {
  var $isHidden = _ref5.$isHidden;
  return $isHidden && (0, _styledComponents.css)(["pointer-events:none;opacity:0;visibility:hidden;"]);
}));

var iconMinus = /*#__PURE__*/_react["default"].createElement(_plasmaIcons.IconMinus, {
  color: "inherit",
  size: "s"
});

var iconPlus = /*#__PURE__*/_react["default"].createElement(_plasmaIcons.IconPlus, {
  color: "inherit",
  size: "s"
});
/**
 * Степпер карточки продукта.
 */


var ProductCardStepper = function ProductCardStepper(_ref6) {
  var value = _ref6.value,
      step = _ref6.step,
      min = _ref6.min,
      max = _ref6.max,
      disabled = _ref6.disabled,
      readonly = _ref6.readonly,
      onChange = _ref6.onChange,
      rest = _objectWithoutProperties(_ref6, _excluded);

  var _useStepper = (0, _Stepper.useStepper)({
    value: value,
    step: step,
    min: min,
    max: max,
    onChange: onChange
  }),
      onLessClick = _useStepper.onLessClick,
      onMoreClick = _useStepper.onMoreClick,
      isMax = _useStepper.isMax,
      isMoreDisabled = _useStepper.isMoreDisabled;

  var isValuePositive = value > 0;
  return /*#__PURE__*/_react["default"].createElement(StyledStepperRoot, rest, readonly ? /*#__PURE__*/_react["default"].createElement(StyledInfoButton, {
    tabIndex: -1,
    showWarning: isMax
  }, "\xD7".concat(value)) : /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(StyledStepperButton, {
    disabled: disabled,
    $isHidden: !isValuePositive,
    onClick: onLessClick
  }, iconMinus), /*#__PURE__*/_react["default"].createElement(StyledStepperValue, {
    $isHidden: !isValuePositive,
    value: value,
    showWarning: isMax
  }), /*#__PURE__*/_react["default"].createElement(StyledStepperButton, {
    disabled: disabled || isMoreDisabled,
    onClick: onMoreClick
  }, iconPlus)));
};

exports.ProductCardStepper = ProductCardStepper;