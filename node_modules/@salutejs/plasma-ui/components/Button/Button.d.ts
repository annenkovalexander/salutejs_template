import React from 'react';
import type { ButtonProps as BaseProps, ButtonContentProps, ButtonSizeProps, ButtonViewProps } from '@salutejs/plasma-core';
import { InteractionProps } from '../../mixins';
export declare type ButtonProps = BaseProps & ButtonContentProps & Partial<ButtonSizeProps> & Partial<ButtonViewProps> & InteractionProps;
export declare const Button: React.ForwardRefExoticComponent<(BaseProps<HTMLElement> & {
    text?: React.ReactNode;
    contentLeft?: React.ReactNode;
    contentRight?: undefined;
    children?: undefined;
    isLoading?: boolean | undefined;
    loader?: React.ReactNode;
} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"primary" | "secondary" | "warning" | "checked" | "success" | "critical" | "overlay" | "clear">> & InteractionProps & React.RefAttributes<HTMLButtonElement>) | (BaseProps<HTMLElement> & {
    text?: React.ReactNode;
    contentLeft?: undefined;
    contentRight?: React.ReactNode;
    children?: undefined;
    isLoading?: boolean | undefined;
    loader?: React.ReactNode;
} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"primary" | "secondary" | "warning" | "checked" | "success" | "critical" | "overlay" | "clear">> & InteractionProps & React.RefAttributes<HTMLButtonElement>) | (BaseProps<HTMLElement> & {
    text?: undefined;
    contentLeft?: undefined;
    contentRight?: undefined;
    children?: React.ReactNode;
    isLoading?: boolean | undefined;
    loader?: React.ReactNode;
} & Partial<ButtonSizeProps<string | number>> & Partial<ButtonViewProps<"primary" | "secondary" | "warning" | "checked" | "success" | "critical" | "overlay" | "clear">> & InteractionProps & React.RefAttributes<HTMLButtonElement>)>;
