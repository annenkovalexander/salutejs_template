"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StepperValue = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaTokens = /*#__PURE__*/require("@salutejs/plasma-tokens");

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");

var _excluded = ["value", "disabled", "showWarning", "formatter"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

(0, _collectPackageInfo.collectPackageInfo)('Stepper/StepperValue');

var StyledValue = /*#__PURE__*/_styledComponents["default"].span.withConfig({
  componentId: "plasma-ui__sc-cq1i1c-0"
})(["", " box-sizing:border-box;margin-left:", "rem;margin-right:", "rem;min-width:", "rem;color:", ";text-align:center;", ";", " ", ""], _plasmaTokens.body2, 12 / _plasmaTokens.scalingPixelBasis, 12 / _plasmaTokens.scalingPixelBasis, 20 / _plasmaTokens.scalingPixelBasis, _plasmaTokens.text, _plasmaCore.applyNoSelect, function (_ref) {
  var showWarning = _ref.showWarning;
  return showWarning && (0, _styledComponents.css)(["color:", ";"], _plasmaTokens.warning);
}, function (_ref2) {
  var disabled = _ref2.disabled;
  return disabled && (0, _styledComponents.css)(["opacity:0.4;"]);
});

/**
 * Компонент для отображения значения степпера.
 */
var StepperValue = function StepperValue(_ref3) {
  var value = _ref3.value,
      disabled = _ref3.disabled,
      showWarning = _ref3.showWarning,
      formatter = _ref3.formatter,
      rest = _objectWithoutProperties(_ref3, _excluded);

  return /*#__PURE__*/_react["default"].createElement(StyledValue, _extends({
    role: "status",
    "aria-live": "polite",
    disabled: disabled,
    showWarning: showWarning
  }, rest), typeof formatter === 'function' ? formatter(value) : value);
};

exports.StepperValue = StepperValue;