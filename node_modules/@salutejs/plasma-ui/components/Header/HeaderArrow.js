"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HeaderArrow = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));

var _plasmaIcons = /*#__PURE__*/require("@salutejs/plasma-icons");

var _utils = /*#__PURE__*/require("../../utils");

var _Button = /*#__PURE__*/require("../Button");

var _excluded = ["arrow", "iconSize"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledButton = /*#__PURE__*/(0, _styledComponents["default"])(_Button.Button).withConfig({
  componentId: "plasma-ui__sc-1s7bntu-0"
})(["position:absolute;top:0;bottom:0;margin-top:auto;margin-bottom:auto;right:100%;margin-right:0.5rem;", ""], function (_ref) {
  var theme = _ref.theme;
  return (0, _utils.mediaQuery)('S', theme.deviceScale)((0, _styledComponents.css)(["position:static;width:auto;height:calc(var(--plasma-header-pt) + var(--plasma-header-height) + var(--plasma-header-pb));padding:0;margin-right:1rem;margin-top:calc(var(--plasma-header-pt) * -1);"]));
}); // TODO: https://github.com/salute-developers/plasma/issues/232

var StyledIcon = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaIcons.IconChevronLeft).withConfig({
  componentId: "plasma-ui__sc-1s7bntu-1"
})(["transition:", ";", ""], function (_ref2) {
  var theme = _ref2.theme;
  return theme.lowPerformance ? 'unset' : 'transform 0.15s ease-in-out';
}, function (_ref3) {
  var arrow = _ref3.arrow;
  return arrow === 'minimize' && (0, _styledComponents.css)(["transform:rotate(-90deg);"]);
});
/**
 * Кнопка-стрелка с возможностью отображения в двух типах - "назад" или "свернуть".
 */

var HeaderArrow = function HeaderArrow(_ref4) {
  var arrow = _ref4.arrow,
      _ref4$iconSize = _ref4.iconSize,
      iconSize = _ref4$iconSize === void 0 ? 's' : _ref4$iconSize,
      rest = _objectWithoutProperties(_ref4, _excluded);

  return /*#__PURE__*/_react["default"].createElement(StyledButton, _extends({
    size: "s",
    square: true,
    view: "clear",
    tabIndex: -1,
    outlined: false,
    forwardedAs: "div"
  }, rest), /*#__PURE__*/_react["default"].createElement(StyledIcon, {
    size: iconSize,
    arrow: arrow
  }));
};

exports.HeaderArrow = HeaderArrow;