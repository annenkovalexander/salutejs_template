"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cell = exports.CellIcon = exports.CellContent = exports.CellContentWrapper = exports.CellRight = exports.CellLeft = exports.CellRoot = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _styledComponents = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("styled-components"));

var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");

var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");

var _excluded = ["contentLeft", "content", "contentRight", "alignLeft", "alignRight"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

(0, _collectPackageInfo.collectPackageInfo)('Cell/Cell');

// TODO: https://github.com/salute-developers/plasma/issues/232
var CellRoot = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-txbyu8-0"
})(["display:flex;&:focus{outline:0 none;}", ";"], function (_ref) {
  var focused = _ref.focused,
      outlined = _ref.outlined,
      theme = _ref.theme;
  return (0, _plasmaCore.addFocus)({
    lowPerformance: theme.lowPerformance,
    focused: focused,
    outlined: outlined,
    outlineOffset: '0.25rem',
    outlineRadius: '0.125rem'
  });
});

exports.CellRoot = CellRoot;
var sizeMap = {
  xs: {
    margin: 0.25,
    height: 1,
    br: 0.25
  },
  // 16px
  s: {
    margin: 0.5,
    height: 1.5,
    br: 0.25
  },
  // 24px
  m: {
    margin: 0.75,
    height: 2.25,
    br: 0.5
  },
  // 36px
  l: {
    margin: 1,
    height: 3,
    br: 0.75
  },
  // 48px
  xl: {
    margin: 1,
    height: 3.5,
    br: 0.75
  },
  // 56px
  xxl: {
    margin: 1,
    height: 4,
    br: 0.75
  } // 64px

};
var alignToFlex = {
  center: 'center',
  top: 'flex-start',
  bottom: 'flex-end'
};

var CellLeft = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-txbyu8-1"
})(["display:flex;align-items:", ";padding:0.375rem 0;"], function (_ref2) {
  var _ref2$align = _ref2.align,
      align = _ref2$align === void 0 ? 'center' : _ref2$align;
  return alignToFlex[align];
});

exports.CellLeft = CellLeft;

var CellRight = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-txbyu8-2"
})(["display:flex;align-items:", ";text-align:right;"], function (_ref3) {
  var _ref3$align = _ref3.align,
      align = _ref3$align === void 0 ? 'center' : _ref3$align;
  return alignToFlex[align];
});
/** Оборачивает ( content + right ) */


exports.CellRight = CellRight;

var CellContentWrapper = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-txbyu8-3"
})(["display:flex;flex:auto;justify-content:space-between;padding:0.375rem 0;"]);

exports.CellContentWrapper = CellContentWrapper;

var CellContent = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-txbyu8-4"
})(["display:flex;align-items:center;"]);

exports.CellContent = CellContent;

var CellIcon = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma-ui__sc-txbyu8-5"
})(["height:", "rem;border-radius:", "rem;overflow:hidden;margin:0.125rem ", "rem;", " &:first-child{margin-left:0;}", " &:last-child{margin-right:0;}& + &{margin-left:0;}"], function (_ref4) {
  var _ref4$size = _ref4.size,
      size = _ref4$size === void 0 ? 'm' : _ref4$size;
  return sizeMap[size].height;
}, function (_ref5) {
  var _ref5$size = _ref5.size,
      size = _ref5$size === void 0 ? 'm' : _ref5$size;
  return sizeMap[size].br;
}, function (_ref6) {
  var _ref6$size = _ref6.size,
      size = _ref6$size === void 0 ? 'm' : _ref6$size;
  return sizeMap[size].margin;
}, CellLeft, CellRight);

exports.CellIcon = CellIcon;

/**
 * Базовый компонент для отображения блоков контента в списках и карточках.
 */
var Cell = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var left = props.contentLeft,
      content = props.content,
      right = props.contentRight,
      _props$alignLeft = props.alignLeft,
      alignLeft = _props$alignLeft === void 0 ? 'center' : _props$alignLeft,
      _props$alignRight = props.alignRight,
      alignRight = _props$alignRight === void 0 ? 'center' : _props$alignRight,
      rest = _objectWithoutProperties(props, _excluded);

  return /*#__PURE__*/_react["default"].createElement(CellRoot, _extends({
    ref: ref
  }, rest), left && /*#__PURE__*/_react["default"].createElement(CellLeft, {
    align: alignLeft
  }, left), /*#__PURE__*/_react["default"].createElement(CellContentWrapper, null, /*#__PURE__*/_react["default"].createElement(CellContent, null, content), right && /*#__PURE__*/_react["default"].createElement(CellRight, {
    align: alignRight
  }, right)));
});
exports.Cell = Cell;