var _div;

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import React, { useMemo, useState } from 'react';
import { ProductCard } from '.';
export var Default = function Default() {
  var _useState = useState(1),
      _useState2 = _slicedToArray(_useState, 2),
      quantity = _useState2[0],
      setQuantity = _useState2[1];

  var badge = useMemo(function () {
    return _div || (_div = /*#__PURE__*/React.createElement("div", null, "\u221220%"));
  }, []);
  var media = useMemo(function () {
    return /*#__PURE__*/React.createElement("div", {
      style: {
        width: '12.25rem',
        height: '12.25rem'
      }
    });
  }, []);
  return /*#__PURE__*/React.createElement("div", {
    style: {
      width: '12.25rem'
    }
  }, /*#__PURE__*/React.createElement(ProductCard, {
    badge: badge,
    media: media,
    text: "\u0411\u0435\u043A\u043E\u043D\u0430\u0439\u0437\u0435\u0440 \u0441 \u0441\u044B\u0440\u043E\u043C, \u0437\u0435\u043B\u0435\u043D\u044C\u044E, \u0431\u043E\u043B\u044C\u0448\u043E\u0439 \u043A\u043E\u0442\u043B\u0435\u0442\u043E\u0439, \u044F\u0439\u0446\u043E\u043C \u0438 \u0441\u043E\u0443\u0441\u043E\u043C",
    price: 80,
    oldPrice: 100,
    quantityMax: 10,
    quantity: quantity,
    onQuantityChange: setQuantity
  }));
};