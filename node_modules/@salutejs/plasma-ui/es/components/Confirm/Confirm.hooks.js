import { useCallback, useEffect } from 'react';
// TODO: #71 it should be new 'WithAutoFocus'
export function useAutoFocus(ref) {
  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var preventScroll = params.preventScroll,
      _params$trigger = params.trigger,
      trigger = _params$trigger === void 0 ? true : _params$trigger;
  var setFocus = useCallback(function () {
    var _ref$current;

    (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.focus({
      preventScroll: preventScroll
    });

    if (ref.current !== document.activeElement) {
      document.addEventListener('transitionend', setFocus, {
        once: true
      });
    } else {
      document.removeEventListener('transitionend', setFocus);
    }
  }, [preventScroll]);
  useEffect(function () {
    trigger && setFocus();
    return function () {
      return document.removeEventListener('transitionend', setFocus);
    };
  }, [trigger]);
  return setFocus;
}